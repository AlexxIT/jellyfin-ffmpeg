name: '🏗️ Build and Publish jellyfin-ffmpeg'

on:
  release:
    types:
      - published

jobs:
  build_publish_debian:
    uses: jellyfin/jellyfin-ffmpeg/.github/workflows/_meta.yaml@master
    if: ${{ !github.event.release.prerelease }}
    with:
      distro: 'debian'
      codenames: "[\"buster\", \"bullseye\"]"
      architectures: "[\"amd64\", \"arm64\", \"armhf\"]"
      release: true

  build_publish_ubuntu:
    uses: jellyfin/jellyfin-ffmpeg/.github/workflows/_meta.yaml@master
    if: ${{ !github.event.release.prerelease }}
    with:
      distro: 'ubuntu'
      codenames: "[\"focal\", \"bionic\", \"impish\", \"hirsute\"]"
      architectures: "[\"amd64\", \"arm64\", \"armhf\"]"
      release: true

  build_publish_windows:
    uses: jellyfin/jellyfin-ffmpeg/.github/workflows/_meta.yaml@master
    if: ${{ !github.event.release.prerelease }}
    with:
      distro: 'windows'
      codenames: "[\"Windows 10\"]"
      architectures: "[\"win64\"]"
      release: true

  maintain_repository:
    name: Maintain Repository
    if: ${{ !github.event.release.prerelease && inputs.release }}
    runs-on: ubuntu-latest
    needs:
      - build_publish_debian
      - build_publish_ubuntu
      - build_publish_windows
    strategy:
      fail-fast: false
      matrix:
        distro:
          - debian
          - ubuntu
          - windows
    steps:
      - name: Sync mirrors and update symlinks
        uses: appleboy/ssh-action@v0.1.4
        env:
          DISTRO: ${{ matrix.distro }}
          RELEASE: ${{ github.release.tag_name }}
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          script_stop: true
          envs: DISTRO, RELEASE
          script: |-
            if [ "${DISTRO}" != "windows" ]; then
              sudo find /srv/repository/releases/server/${DISTRO}/ -type l -name "jellyfin-ffmpeg_*" -exec rm {} \;
              reprepro -b /srv/repository/${DISTRO} deleteunreferenced
              reprepro -b /srv/repository/${DISTRO} export
              find "/srv/repository/${DISTRO}" -name "*.deb" | while read file; do
                sha256sum ${file#./} > ${file%.*}.sha256
                reprepro -b /srv/repository/${DISTRO} --export=never --keepunreferencedfiles includedeb ${RELEASE} ${file}
              done
            fi
            sudo rm -f /srv/repository/releases/server/${DISTRO}/{stable,stable-pre,unstable}/ffmpeg
            sudo ln -fs /srv/repository/releases/server/${DISTRO}/versions/jellyfin-ffmpeg/${RELEASE} /srv/repository/releases/server/${DISTRO}/stable/ffmpeg
            sudo ln -fs /srv/repository/releases/server/${DISTRO}/versions/jellyfin-ffmpeg/${RELEASE} /srv/repository/releases/server/${DISTRO}/stable-pre/ffmpeg
            sudo ln -fs /srv/repository/releases/server/${DISTRO}/versions/jellyfin-ffmpeg/${RELEASE} /srv/repository/releases/server/${DISTRO}/unstable/ffmpeg
            sudo chown -R root:adm /srv/repository/${DISTRO}
            sudo chmod -R g+w /srv/repository/${DISTRO}
