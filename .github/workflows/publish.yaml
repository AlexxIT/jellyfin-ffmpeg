name: 'ðŸš€ Build and Publish jellyfin-ffmpeg'

on:
  release:
    types:
      - released

jobs:
  build_publish_debian:
    uses: jellyfin/jellyfin-ffmpeg/.github/workflows/_meta.yaml@jellyfin
    with:
      distro: 'debian'
      codenames: '["buster", "bullseye"]'
      architectures: '["amd64", "arm64", "armhf"]'
      release: true

  build_publish_ubuntu:
    uses: jellyfin/jellyfin-ffmpeg/.github/workflows/_meta.yaml@jellyfin
    with:
      distro: 'ubuntu'
      codenames: '["focal", "bionic", "impish", "hirsute"]'
      architectures: '["amd64", "arm64", "armhf"]'
      release: true

  build_publish_windows:
    uses: jellyfin/jellyfin-ffmpeg/.github/workflows/_meta.yaml@jellyfin
    with:
      distro: 'windows'
      codenames: '["Windows 10"]'
      architectures: '["win64"]'
      release: true

  maintain_repository:
    name: Maintain Repository
    if: ${{ !github.event.release.prerelease && inputs.release }}
    runs-on: ubuntu-latest
    needs:
      - build_publish_debian
      - build_publish_ubuntu
      - build_publish_windows
    strategy:
      fail-fast: false
      matrix:
        arrays: [
          {distro: 'debian', codename: 'buster'},
          {distro: 'debian', codename: 'bullseye'},
          {distro: 'ubuntu', codename: 'focal'},
          {distro: 'ubuntu', codename: 'bionic'},
          {distro: 'ubuntu', codename: 'impish'},
          {distro: 'ubuntu', codename: 'hirsute'},
          {distro: 'windows', codename: 'windows'},
        ]
    steps:
      - name: Sync mirrors and update symlinks
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          script_stop: true
          script: |-
            version="${github.release.tag_name#v}"
            basename="jellyfin-ffmpeg_${version}-${matrix.arrays.codename}"
            if [ "${matrix.distro}" != "windows" ]; then
              sudo find /srv/repository/releases/server/${matrix.arrays.distro}/ -type l -name "jellyfin-ffmpeg_*" -exec rm {} \;
              find /srv/repository/releases/server/${matrix.arrays.distro}/versions/jellyfin-ffmpeg/${version} -type f -name "${basename}_*.deb" | while read file; do
                reprepro -b /srv/repository/${matrix.distro} --export=never --keepunreferencedfiles includedeb ${matrix.arrays.codename} ${file}
              done
              sudo find /srv/repository/releases/server/${matrix.distro}/ -type l -name "${basename}_*" -exec rm {} \;
              reprepro -b /srv/repository/${matrix.distro} deleteunreferenced
              reprepro -b /srv/repository/${matrix.distro} export
              sudo rm -f /srv/repository/releases/server/${matrix.distro}/{stable,stable-pre,unstable}/ffmpeg
              sudo ln -fs /srv/repository/releases/server/${matrix.distro}/versions/jellyfin-ffmpeg/${version} /srv/repository/releases/server/${matrix.distro}/stable/ffmpeg
              sudo ln -fs /srv/repository/releases/server/${matrix.distro}/versions/jellyfin-ffmpeg/${version} /srv/repository/releases/server/${matrix.distro}/stable-pre/ffmpeg
              sudo ln -fs /srv/repository/releases/server/${matrix.distro}/versions/jellyfin-ffmpeg/${version} /srv/repository/releases/server/${matrix.distro}/unstable/ffmpeg
            else
              sudo rm -f /srv/repository/releases/server/${matrix.distro}/ffmpeg
              sudo ln -fs /srv/repository/releases/server/${matrix.distro}/versions/jellyfin-ffmpeg/${version} /srv/repository/releases/server/${matrix.distro}/ffmpeg
            fi
            sudo chown -R root:adm /srv/repository/${matrix.distro}
            sudo chmod -R g+w /srv/repository/${matrix.distro}
