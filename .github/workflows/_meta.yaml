on:
  workflow_call:
    inputs:
      distro:
        required: true
        default: 'debian'
        type: string
      codenames:
        description: 'Stringified JSON object listing target distro codenames'
        required: true
        default: '["bullseye"]'
        type: string
      architectures:
        description: 'Stringified JSON object listing target architectures'
        required: true
        default: '["amd64"]'
        type: string
      release:
        required: false
        default: false
        type: boolean
    secrets:
      deploy-host:
        required: false
      deploy-user:
        required: false
      deploy-key:
        required: false

jobs:
  build:
    name: 'Build FFmpeg'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        release: ${{fromJson(inputs.codenames)}}
        arch: ${{fromJson(inputs.architectures)}}
  
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - name: Install make and mmv
        run: sudo apt-get install make mmv

      - name: Build Linux
        run: ./build ${{ matrix.release }} ${{ matrix.arch }} dist

      - name: Upload Artifacts
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        with:
          name: ${{ inputs.distro }}-${{ matrix.release }}-${{ matrix.arch }}
          path: dist

  publish:
    name: Publish Release
    if: ${{ inputs.release }}
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: true
      matrix:
        release: ${{fromJson(inputs.codenames)}}
        arch: ${{fromJson(inputs.architectures)}}

    steps:
      - name: Set Versions
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0 # v6.3.3
        id: set_version
        with:
          script: |
            const tag = context.ref.substring(10)
            const no_v = tag.replace('v', '')
            const dash_index = no_v.lastIndexOf('-')
            const no_dash = (dash_index > -1) ?  no_v.substring(0, dash_index) : no_v
            core.setOutput('tag', tag)
            core.setOutput('no-v', no_v)
            core.setOutput('no-dash', no_dash)

      - name: Download Artifacts
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1
        with:
          name: ${{ inputs.distro }}-${{ matrix.release }}-${{ matrix.arch }}
          path: artifact

      - name: Prepare Release Assets
        run: |-
          pushd artifact
          find * -type f -name "*.deb" | while read file; do
            sha256sum "${file}" | tee "${file}.sha256sum"
          done
          popd
          
      - name: Upload GH Release Assets
        uses: shogo82148/actions-upload-release-asset@e94a7386c3c266a207386460471b1efb5c7431eb # v1.6.3
        with:
          upload_url: ${{ github.event.release.upload_url }}
          overwrite: true
          asset_path: |
            ./artifact/**/*.zip
            ./artifact/**/*.deb
            ./artifact/**/*.sha256sum

      - name: Make Sure Release Directory Exists
        uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0 # v0.1.5
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          script_stop: true
          script: |-
            mkdir -p /srv/repository/releases/server/${{ inputs.distro }}/versions/jellyfin-ffmpeg/${{ steps.set_version.outputs.no-v }}/

      - name: Upload Release Assets
        uses: burnett01/rsync-deployments@2651e3eecb4ea772cbe952695d04952e92027b4f # 5.2.1
        with:
          switches: -vrptz
          path: ./artifact/*
          remote_path: /srv/repository/releases/server/${{ inputs.distro }}/versions/jellyfin-ffmpeg/${{ steps.set_version.outputs.no-v }}/
          remote_host: ${{ secrets.deploy-host }}
          remote_user: ${{ secrets.deploy-user }}
          remote_key: ${{ secrets.deploy-key }}
