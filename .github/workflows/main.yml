name: Build Linux

on:
  push:
    branches:
      - jellyfin

  pull_request:
    branches:
      - jellyfin

  release: 
    types:
      - released

  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.release }} ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        release:
          - bullseye
          - buster
          - stretch
          - groovy
          - focal
          - bionic

        arch:
          - amd64
          - arm64
          - armhf

    steps:
      - uses: actions/checkout@v2

      - name: Install make and mmv
        run: sudo apt-get install make mmv

      - name: Install Docker
        uses: docker-practice/actions-setup-docker@v1

      - name: Build
        run: ./build ${{ matrix.release }} ${{ matrix.arch }} dist

      - name: Upload Packages
        uses: actions/upload-artifact@v2.2.3
        with:
          name: ${{ matrix.release }} ${{ matrix.arch }} package
          path: dist

  publish:
    if: ${{ github.event_name == 'release' && github.event.action == 'released' }}
    needs: build
    name: Push artifacts to repo
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Upload to repo.jellyfin.org
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -rltgoDzvO --delete 
          path: artifacts
          remote_path: /srv/repository/incoming/ffmpeg/${{ github.event.release.tag_name }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}
          
      - name: Collect new version
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOST  }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: /srv/repository/collect-ffmpeg.sh